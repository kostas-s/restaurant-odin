(()=>{"use strict";var n={192:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(15),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([n.id,'@keyframes fade-in{from{opacity:0;margin-left:7%}to{opacity:1;margin-left:8%}}@keyframes fade-out{0%{opacity:1;margin-left:8%}100%{opacity:0;margin-left:9%}}body,p,a,h1{padding:0;margin:0;font-family:"Raleway",sans-serif}header{display:flex;align-items:center;justify-content:space-between;width:100%;height:120px;background-color:#57837b}@media only screen and (max-width: 800px){header{height:100px !important}header .brand{font-size:58px !important}header .links{visibility:hidden !important}}header .brand{font-family:"Zen Loop",cursive;font-size:80px;margin-left:1rem}header .links{visibility:visible;margin-right:1rem}header .links .link{box-sizing:border-box;transition-duration:.2s;margin-left:2rem;font-size:30px;font-weight:200;cursor:pointer}header .links .link:hover:not(.activated){color:#f1ecc3;margin-left:5rem}header .links .activated{font-weight:500}section{width:100%;min-height:500px;padding:5em 0;background-color:#f1ecc3}@media only screen and (max-width: 1200px){section .image1{max-width:100% !important}section .image2{max-width:100% !important}}@media only screen and (max-width: 800px){section .main-content{display:flex !important;flex-direction:column !important}}section .para-title{margin-bottom:.5em;font-size:1.7em;font-weight:600}section .main-content{margin-left:8%;margin-right:8%;gap:5em 1em;display:grid;grid-template-areas:"tl tr" "ml mr" "bot bot";font-size:1.5em}section .top-left-col{grid-area:tl}section .mid-left-col{grid-area:ml}section .top-right-col{grid-area:tr}section .mid-right-col{grid-area:mr}section .bot-col{font-size:1.2em;grid-area:bot;text-align:center}section .fade-in{animation:fade-in .4s ease-in-out}section .fade-out{animation:fade-out .4s ease-in-out}section .image1{border-radius:10% 5% 10% 20%;max-width:500px;transform:rotateZ(-2deg)}section .image2{border-radius:10% 5% 10% 20%;max-width:550px;transform:rotateZ(6deg)}footer{display:flex;align-items:center;justify-content:flex-start;font-size:1.2em;width:100%;height:70px;background-color:#515e63}footer p{padding-left:1rem}footer a{font-weight:600;margin-left:.5rem;text-decoration:none;transition-duration:.2s;color:#000}footer a:hover{color:#f1ecc3}',"",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAUA,mBACI,KAAA,SAAA,CACA,cAJe,CAKf,GAAA,SAAA,CAAA,cAPa,CAAA,CAWjB,oBACI,GAAA,SAAA,CAAA,cAZa,CAab,KAAA,SAAA,CAAA,cAZgB,CAAA,CAepB,YACI,SAAA,CACA,QAAA,CACA,gCArBO,CAwBX,OAUI,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,UAAA,CACA,YAAA,CACA,wBA3CU,CA6BV,0CADJ,OAEQ,uBAAA,CACA,cACI,yBAAA,CAEJ,cACI,4BAAA,CAAA,CASR,cACI,8BAxCI,CAyCJ,cAAA,CACA,gBAAA,CAGJ,cACI,kBAAA,CACA,iBAAA,CACJ,oBACI,qBAAA,CACA,uBAAA,CACA,gBAAA,CACA,cAAA,CACA,eAAA,CACA,cAAA,CAEA,0CACI,aA7DG,CA8DH,gBAAA,CAEJ,yBACI,eAAA,CAKZ,QAeI,UAAA,CACA,gBAAA,CACA,aAAA,CACA,wBAxFW,CAuEX,2CACI,gBACA,yBAAA,CAEJ,gBACI,yBAAA,CAAA,CAGJ,0CACI,sBACI,uBAAA,CACA,gCAAA,CAAA,CAQR,oBACI,kBAAA,CACA,eAAA,CACA,eAAA,CAEJ,sBACI,cA3FS,CA4FT,eA5FS,CA6FT,WAAA,CACA,YAAA,CACA,6CAAA,CAGA,eAAA,CAEJ,sBAEI,YAAA,CAEJ,sBAEI,YAAA,CAEJ,uBAEI,YAAA,CAEJ,uBAEI,YAAA,CAEJ,iBACI,eAAA,CACA,aAAA,CACA,iBAAA,CAEJ,iBACI,iCAAA,CAEJ,kBACI,kCAAA,CAEJ,gBACI,4BAAA,CACA,eAAA,CACA,wBAAA,CAEJ,gBACI,4BAAA,CACA,eAAA,CACA,uBAAA,CAOR,OACI,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,eAAA,CACA,UAAA,CACA,WAAA,CACA,wBAzJU,CA0JV,SACI,iBAAA,CAEJ,SACI,eAAA,CACA,iBAAA,CACA,oBAAA,CACA,uBAAA,CACA,UAAA,CAEJ,eACI,aAtKO",sourcesContent:['$colorHeader: #57837B;\n$colorSection: #F1ECC3;\n$colorFooter: #515E63;\n$colorImgBg1: #A35709;\n$fontMain: \'Raleway\', sans-serif;\n$fontBrand: \'Zen Loop\', cursive;\n$mainMarginLeft: 8%;\n$mainMarginLeftOut: 9%;\n$mainMarginLeftIn: 7%;\n\n@keyframes fade-in {\n    from {opacity: 0;\n    margin-left:$mainMarginLeftIn;}\n    to {opacity: 1; margin-left: $mainMarginLeft;\n    }\n}\n\n@keyframes fade-out {\n    0% {opacity: 1; margin-left: $mainMarginLeft}\n    100% {opacity: 0; margin-left: $mainMarginLeftOut}\n}\n\nbody, p, a, h1 {\n    padding: 0;\n    margin: 0;\n    font-family: $fontMain;\n}\n\nheader {\n    @media only screen and (max-width: 800px) {\n        height: 100px !important;\n        .brand {\n            font-size: 58px !important;\n        }\n        .links {\n            visibility: hidden !important;\n        }\n    }\n    display:flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: 120px;\n    background-color: $colorHeader;\n    .brand {\n        font-family: $fontBrand;\n        font-size: 80px;\n        margin-left: 1rem;\n    }\n\n    .links {\n        visibility: visible;\n        margin-right: 1rem;\n    .link {\n        box-sizing: border-box;\n        transition-duration: 0.2s;\n        margin-left: 2rem;\n        font-size: 30px;\n        font-weight:200;\n        cursor:pointer;\n        }\n        .link:hover:not(.activated) {\n            color:$colorSection;\n            margin-left: 5rem;\n        }\n        .activated {\n            font-weight: 500;\n        }\n    }\n}\n\nsection {\n    @media only screen and (max-width: 1200px) {\n        .image1 {\n        max-width: 100% !important;\n    }\n    .image2 {\n        max-width: 100% !important;\n    }\n}\n    @media only screen and (max-width: 800px) {\n        .main-content {\n            display:flex !important;\n            flex-direction: column !important;\n        }\n    }\n    width: 100%;\n    min-height: 500px;\n    padding: 5em 0 ;\n    background-color: $colorSection;\n\n    .para-title {\n        margin-bottom:0.5em;\n        font-size: 1.7em;\n        font-weight: 600;\n    }\n    .main-content {\n        margin-left: $mainMarginLeft;\n        margin-right: $mainMarginLeft;\n        gap: 5em 1em;\n        display:grid;\n        grid-template-areas: "tl tr" \n        "ml mr"\n        "bot bot";\n        font-size: 1.5em;\n    }\n    .top-left-col {\n\n        grid-area: tl;\n    }\n    .mid-left-col {\n\n        grid-area: ml;\n    }\n    .top-right-col {\n\n        grid-area: tr;\n    }\n    .mid-right-col {\n\n        grid-area: mr;\n    }\n    .bot-col {\n        font-size: 1.2em;\n        grid-area: bot;\n        text-align: center;\n    }\n    .fade-in {\n        animation: fade-in 0.4s ease-in-out;\n    }\n    .fade-out {\n        animation: fade-out 0.4s ease-in-out;\n    }\n    .image1 {\n        border-radius: 10% 5% 10% 20%;\n        max-width: 500px;\n        transform:rotateZ(-2deg);\n    }\n    .image2 {\n        border-radius: 10% 5% 10% 20%;\n        max-width: 550px;\n        transform: rotateZ(6deg);\n    }\n\n}\n\n\n\nfooter {\n    display:flex;\n    align-items: center;\n    justify-content: flex-start;\n    font-size: 1.2em;\n    width: 100%;\n    height: 70px;\n    background-color: $colorFooter;\n    p {\n        padding-left: 1rem;\n    }\n    a {\n        font-weight:600;\n        margin-left: 0.5rem;\n        text-decoration: none;\n        transition-duration: 0.2s;\n        color: black;\n    }\n    a:hover {\n        color: $colorSection;\n    }\n}\n\n'],sourceRoot:""}]);const c=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(r)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(i[o]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);r&&i[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),e.push(A))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}n.exports=function(n){var t,r,i=(r=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,i,a=[],o=!0,c=!1;try{for(t=t.call(n);!(o=(r=t.next()).done)&&(a.push(r.value),!e||a.length!==e);o=!0);}catch(n){c=!0,i=n}finally{try{o||null==t.return||t.return()}finally{if(c)throw i}}return a}}(t,r)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=i[1],o=i[3];if(!o)return a;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),s="/*# ".concat(A," */"),d=o.sources.map((function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")}));return[a].concat(d).concat([s]).join("\n")}return[a].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},o=[],c=0;c<n.length;c++){var A=n[c],s=r.base?A[0]+r.base:A[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var m=t(l),u={css:A[1],media:A[2],sourceMap:A[3]};-1!==m?(e[m].references++,e[m].updater(u)):e.push({identifier:l,updater:i(u,r),references:1}),o.push(l)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var a=r(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var c=t(a[o]);e[c].references--}for(var A=r(n,i),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r=t.css,i=t.media,a=t.sourceMap;i?n.setAttribute("media",i):n.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},201:(n,e,t)=>{n.exports=t.p+"a346555d0cd4d7c36ff2.jpeg"},567:(n,e,t)=>{n.exports=t.p+"baa6ff73da5ce61d80b7.png"}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),r=t(795),i=t.n(r),a=t(569),o=t.n(a),c=t(565),A=t.n(c),s=t(216),d=t.n(s),l=t(589),m=t.n(l),u=t(192),f={};function p(n,e=[]){const t=document.createElement("p");return v(t,e),t.textContent=n,t}function C(n,e=[]){const t=document.createElement("h1");return v(t,e),t.textContent=n,t}function g(n,e,t,r=[]){const i=document.createElement("a");return v(i,r),i.textContent=n,i.id=t,i.addEventListener("click",e),i}function h(n,e="image",t=[]){const r=document.createElement("img");return v(r,t),r.src=n,r.alt=e,r}function y(n){const e=document.querySelectorAll(".link");for(let t of e)t.id===n?t.classList.add("activated"):t.classList.remove("activated")}function b(n){return document.querySelector(`#${n}`).classList.contains("activated")}function v(n,e){if(e.length>0)for(let t of e)n.classList.add(t)}f.styleTagTransform=m(),f.setAttributes=A(),f.insert=o().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=d(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var x=t(201),B=t(567);const w=function(){if(b("Home"))return;const n=document.querySelector(".main-content");n.classList.add("fade-out"),y("Home"),setTimeout((()=>{n.innerHTML="",n.classList.remove("fade-out");const e=function(){const n=document.createElement("div");n.classList.add("top-left-col");const e=C("Enjoy the relaxing experience of brunch",["para-title"]),t=p("We offer the most delicious brunch ideas in a beautiful environment. Perfect for your coffee break or mid-day lunch!",["para-main"]);return n.appendChild(e),n.appendChild(t),n}(),t=h(x,"brunch image",["top-right-col","image1"]),r=function(){const n=document.createElement("div");n.classList.add("mid-left-col");const e=h(B,"eggs image",["image2"]);return n.appendChild(e),n}(),i=function(){const n=document.createElement("div");n.classList.add("mid-right-col");const e=p("Our ingredients come from our trusted producers fresh every day, so that we can deliver you the experience you deserve.",["para-main"]),t=C("Quality ingredients, Delicious recipes!",["para-title"]);return n.appendChild(t),n.appendChild(e),n}(),a=function(){const n=document.createElement("div");n.classList.add("bot-col");const e=C("Take a well-deserved break...",["para-title"]);n.appendChild(e);const t=p("Call us to make your reservation!",["para-main"]);return n.appendChild(t),n}();n.appendChild(e),n.appendChild(t),n.appendChild(r),n.appendChild(i),n.appendChild(a),n.classList.add("fade-in")}),350)},E=document.querySelector("#content");!function(){const n=document.createElement("header"),e=C("Brunchery",["brand"]);n.appendChild(e);const t=document.createElement("div");t.classList.add("links");const r=g("Home",(()=>w()),"Home",["link"]),i=g("Menu",(()=>function(){if(b("Menu"))return;const n=document.querySelector(".main-content");n.classList.add("fade-out"),y("Menu"),setTimeout((()=>{n.innerHTML="",n.classList.remove("fade-out");const e=function(){const n=document.createElement("div");n.classList.add("top-left-col");const e=C("Under Construction...",["para-title"]),t=p("Check back soon!",["para-main"]);return n.appendChild(e),n.appendChild(t),n}();n.appendChild(e),n.classList.add("fade-in")}),350)}()),"Menu",["link"]),a=g("Contact",(()=>function(){if(b("Contact"))return;const n=document.querySelector(".main-content");n.classList.add("fade-out"),y("Contact"),setTimeout((()=>{n.innerHTML="",n.classList.remove("fade-out");const e=function(){const n=document.createElement("div");n.classList.add("top-left-col");const e=C("Under Construction...",["para-title"]),t=p("Check back soon!",["para-main"]);return n.appendChild(e),n.appendChild(t),n}();n.appendChild(e),n.classList.add("fade-in")}),350)}()),"Contact",["link"]);t.appendChild(r),t.appendChild(i),t.appendChild(a),n.appendChild(t),E.appendChild(n)}(),function(){const n=document.createElement("section"),e=document.createElement("div");e.classList.add("main-content"),n.appendChild(e),E.appendChild(n)}(),function(){const n=document.createElement("footer"),e=p("Website created by "),t=function(n,e,t=[]){const r=document.createElement("a");return v(r,t),r.textContent=n,r.href=e,r}("Kostas-s","https://github.com/kostas-s");n.appendChild(e),n.appendChild(t),E.appendChild(n)}(),w()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,