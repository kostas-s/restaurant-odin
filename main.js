(()=>{"use strict";var n={192:(n,e,t)=>{t.d(e,{Z:()=>A});var i=t(15),a=t.n(i),r=t(645),o=t.n(r)()(a());o.push([n.id,'@keyframes fade-in{from{opacity:0;margin-left:7%}to{opacity:1;margin-left:8%}}@keyframes fade-out{0%{opacity:1;margin-left:8%}100%{opacity:0;margin-left:9%}}body,p,a,h1{padding:0;margin:0;font-family:"Raleway",sans-serif}body{min-width:250px}header{position:relative;z-index:10;display:flex;align-items:center;justify-content:space-between;width:100%;height:120px;background-color:#57837b}@media only screen and (max-width: 800px){header{z-index:10;height:100px !important}header .brand{font-size:58px !important}header .links{display:none !important}header .btn-hamburger{display:block !important}}header .brand{font-family:"Zen Loop",cursive;font-size:80px;margin-left:1rem}header .bar1,header .bar2,header .bar3{width:35px;height:5px;background-color:#333;margin:6px 0;transition:.4s}header .btn-hamburger{display:none;margin-right:1rem}header .change .bar1{-webkit-transform:rotate(-45deg) translate(-9px, 6px);transform:rotate(-45deg) translate(-9px, 6px)}header .change .bar2{opacity:0}header .change .bar3{-webkit-transform:rotate(45deg) translate(-8px, -8px);transform:rotate(45deg) translate(-8px, -8px)}header .links{margin-right:1rem;display:block}header .links .link{box-sizing:border-box;transition-duration:.2s;margin-left:2rem;font-size:30px;font-weight:200;cursor:pointer}header .links .link:hover:not(.activated){color:#f1ecc3;margin-left:5rem}header .links .activated{font-weight:500}section{position:relative;flex-direction:column;display:flex;align-items:center;width:100%;min-height:500px;padding:5em 0;background-color:#f1ecc3}@media only screen and (max-width: 1200px){section .image1{max-width:100% !important}section .image2{max-width:100% !important}}@media only screen and (max-width: 800px){section{padding:0 0 5em 0}section .main-content{display:flex !important;flex-direction:column !important}section .hidden-menu{display:block !important}section .menu-title{font-size:17px !important}}section .hidden-menu{width:100%;display:none;z-index:1;position:relative;transition-duration:.6s;height:50px;left:0;top:-50px;background-color:#57837b;box-shadow:0 0 0 0 rgba(0,0,0,.2)}section .hidden-menu.activated{top:0px !important;box-shadow:0 4px 15px 0 rgba(0,0,0,.2) !important}section .link{box-sizing:border-box;transition-duration:.2s;margin-left:2rem;font-size:30px;font-weight:200;cursor:pointer}section .link:hover:not(.activated){color:#f1ecc3}section .activated{font-weight:500}section .para-title{margin-bottom:.5em;font-size:1.7em;font-weight:600}section .menu-line{display:flex;justify-content:space-between}section .menu-img{width:50%;border-radius:20px}section .menu-title{font-size:1.05em;width:50%;align-self:center}section .main-content{margin-left:8%;margin-right:8%;gap:5em 1em;display:grid;grid-template-areas:"tl tr" "ml mr" "bot bot";font-size:1.5em}section .main-content.menu{max-width:1200px;margin-left:8%;margin-right:8%;display:flex;padding:1em;border:1px solid gray;border-radius:15px;flex-direction:column;font-size:1.5em;background-color:#fff5da}section .top-left-col{grid-area:tl}section .mid-left-col{grid-area:ml}section .top-right-col{grid-area:tr}section .mid-right-col{grid-area:mr}section .bot-col{font-size:1.2em;grid-area:bot;text-align:center}section .fade-in{animation:fade-in .4s ease-in-out}section .fade-out{animation:fade-out .4s ease-in-out}section .image1{border-radius:10% 5% 10% 20%;max-width:500px;transform:rotateZ(-2deg)}section .image2{border-radius:10% 5% 10% 20%;max-width:550px;transform:rotateZ(6deg)}footer{display:flex;align-items:center;justify-content:flex-start;font-size:1.2em;width:100%;height:70px;background-color:#515e63}footer p{padding-left:1rem}footer a{font-weight:600;margin-left:.5rem;text-decoration:none;transition-duration:.2s;color:#000}footer a:hover{color:#f1ecc3}',"",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAWA,mBACI,KAAA,SAAA,CACA,cAJe,CAKf,GAAA,SAAA,CAAA,cAPa,CAAA,CAWjB,oBACI,GAAA,SAAA,CAAA,cAZa,CAab,KAAA,SAAA,CAAA,cAZgB,CAAA,CAepB,YACI,SAAA,CACA,QAAA,CACA,gCArBO,CAwBX,KACI,eAAA,CAGJ,OAcI,iBAAA,CACA,UAAA,CACA,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,UAAA,CACA,YAAA,CACA,wBAtDU,CAkCV,0CADJ,OAEQ,UAAA,CACA,uBAAA,CACA,cACI,yBAAA,CAEJ,cACI,uBAAA,CAEJ,sBACI,wBAAA,CAAA,CAWR,cACI,8BAlDI,CAmDJ,cAAA,CACA,gBAAA,CAEJ,uCACA,UAAA,CACA,UAAA,CACA,qBAAA,CACA,YAAA,CACA,cAAA,CAEA,sBACI,YAAA,CACA,iBAAA,CAGJ,qBACI,qDAAA,CACA,6CAAA,CAGF,qBAAA,SAAA,CAEA,qBACE,qDAAA,CACA,6CAAA,CAGJ,cACI,iBAAA,CACA,aAAA,CACJ,oBACI,qBAAA,CACA,uBAAA,CACA,gBAAA,CACA,cAAA,CACA,eAAA,CACA,cAAA,CAEA,0CACI,aA/FG,CAgGH,gBAAA,CAEJ,yBACI,eAAA,CAKZ,QAuBI,iBAAA,CACA,qBAAA,CACA,YAAA,CACA,kBAAA,CACA,UAAA,CACA,gBAAA,CACA,aAAA,CACA,wBAtIW,CAyGX,2CACI,gBACA,yBAAA,CAEJ,gBACI,yBAAA,CAAA,CAGJ,0CATJ,QAUQ,iBAAA,CACA,sBACI,uBAAA,CACA,gCAAA,CAEJ,qBACI,wBAAA,CAEJ,oBACI,yBAAA,CAAA,CAYR,qBACI,UAAA,CACA,YAAA,CACA,SAAA,CACA,iBAAA,CACA,uBAAA,CACA,WAAA,CACA,MAAA,CACA,SAAA,CACA,wBAjJM,CAkJN,iCAAA,CAGJ,+BACI,kBAAA,CACA,iDAAA,CAEJ,cACI,qBAAA,CACA,uBAAA,CACA,gBAAA,CACA,cAAA,CACA,eAAA,CACA,cAAA,CAEA,oCACI,aAjKG,CAmKP,mBACI,eAAA,CAGR,oBACI,kBAAA,CACA,eAAA,CACA,eAAA,CAEJ,mBACI,YAAA,CACA,6BAAA,CAEJ,kBACI,SAAA,CACA,kBAAA,CAIJ,oBACI,gBAAA,CAEA,SAAA,CACA,iBAAA,CAEJ,sBACI,cAvLS,CAwLT,eAxLS,CAyLT,WAAA,CACA,YAAA,CACA,6CAAA,CAGA,eAAA,CAEJ,2BACI,gBAAA,CACA,cAlMS,CAmMT,eAnMS,CAoMT,YAAA,CACA,WAAA,CACA,qBAAA,CACA,kBAAA,CACA,qBAAA,CACA,eAAA,CACA,wBA7MM,CA+MV,sBAEI,YAAA,CAEJ,sBAEI,YAAA,CAEJ,uBAEI,YAAA,CAEJ,uBAEI,YAAA,CAEJ,iBACI,eAAA,CACA,aAAA,CACA,iBAAA,CAEJ,iBACI,iCAAA,CAEJ,kBACI,kCAAA,CAEJ,gBACI,4BAAA,CACA,eAAA,CACA,wBAAA,CAEJ,gBACI,4BAAA,CACA,eAAA,CACA,uBAAA,CAOR,OACI,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,eAAA,CACA,UAAA,CACA,WAAA,CACA,wBAlQU,CAmQV,SACI,iBAAA,CAEJ,SACI,eAAA,CACA,iBAAA,CACA,oBAAA,CACA,uBAAA,CACA,UAAA,CAEJ,eACI,aA/QO",sourcesContent:['$colorHeader: #57837B;\n$colorSection: #F1ECC3;\n$colorFooter: #515E63;\n$colorImgBg1: #A35709;\n$colorMenuBg: #FFF5DA;\n$fontMain: \'Raleway\', sans-serif;\n$fontBrand: \'Zen Loop\', cursive;\n$mainMarginLeft: 8%;\n$mainMarginLeftOut: 9%;\n$mainMarginLeftIn: 7%;\n\n@keyframes fade-in {\n    from {opacity: 0;\n    margin-left:$mainMarginLeftIn;}\n    to {opacity: 1; margin-left: $mainMarginLeft;\n    }\n}\n\n@keyframes fade-out {\n    0% {opacity: 1; margin-left: $mainMarginLeft}\n    100% {opacity: 0; margin-left: $mainMarginLeftOut}\n}\n\nbody, p, a, h1 {\n    padding: 0;\n    margin: 0;\n    font-family: $fontMain;\n}\n\nbody {\n    min-width: 250px;\n}\n\nheader {\n    @media only screen and (max-width: 800px) {\n        z-index: 10;\n        height: 100px !important;\n        .brand {\n            font-size: 58px !important;\n        }\n        .links {\n            display: none !important;\n        }\n        .btn-hamburger {\n            display: block !important;\n        }\n    }\n    position: relative;\n    z-index: 10;\n    display:flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: 120px;\n    background-color: $colorHeader;\n    .brand {\n        font-family: $fontBrand;\n        font-size: 80px;\n        margin-left: 1rem;\n    }\n    .bar1, .bar2, .bar3{\n    width: 35px;\n    height: 5px;\n    background-color: #333;\n    margin: 6px 0;\n    transition: 0.4s;\n    }\n    .btn-hamburger {\n        display:none;\n        margin-right: 1rem;\n\n    }\n    .change .bar1 {\n        -webkit-transform: rotate(-45deg) translate(-9px, 6px);\n        transform: rotate(-45deg) translate(-9px, 6px);\n      }\n      \n      .change .bar2 {opacity: 0;}\n      \n      .change .bar3 {\n        -webkit-transform: rotate(45deg) translate(-8px, -8px);\n        transform: rotate(45deg) translate(-8px, -8px);\n      }\n\n    .links {\n        margin-right: 1rem;\n        display: block;\n    .link {\n        box-sizing: border-box;\n        transition-duration: 0.2s;\n        margin-left: 2rem;\n        font-size: 30px;\n        font-weight:200;\n        cursor:pointer;\n        }\n        .link:hover:not(.activated) {\n            color:$colorSection;\n            margin-left: 5rem;\n        }\n        .activated {\n            font-weight: 500;\n        }\n    }\n}\n\nsection {\n    @media only screen and (max-width: 1200px) {\n        .image1 {\n        max-width: 100% !important;\n    }\n    .image2 {\n        max-width: 100% !important;\n    }\n}\n    @media only screen and (max-width: 800px) {\n        padding: 0 0 5em 0;\n        .main-content {\n            display:flex !important;\n            flex-direction: column !important;\n        }\n        .hidden-menu {\n            display: block !important;\n        }\n        .menu-title {\n            font-size: 17px !important;\n        }\n\n    }\n    position: relative;\n    flex-direction: column;\n    display:flex;\n    align-items: center;\n    width: 100%;\n    min-height: 500px;\n    padding: 5em 0 ;\n    background-color: $colorSection;\n    .hidden-menu {\n        width: 100%;\n        display: none;\n        z-index: 1;\n        position: relative;\n        transition-duration: 0.6s;\n        height: 50px;\n        left:0 ;\n        top:-50px;\n        background-color: $colorHeader;\n        box-shadow: 0 0 0 0 rgba(0,0,0,0.2);\n\n    } \n    .hidden-menu.activated {\n        top: 0px !important;\n        box-shadow: 0 4px 15px 0 rgba(0,0,0,0.2) !important;\n    }\n    .link {\n        box-sizing: border-box;\n        transition-duration: 0.2s;\n        margin-left: 2rem;\n        font-size: 30px;\n        font-weight:200;\n        cursor:pointer;\n        }\n        .link:hover:not(.activated) {\n            color:$colorSection;\n        }\n        .activated {\n            font-weight: 500;\n        }\n\n    .para-title {\n        margin-bottom:0.5em;\n        font-size: 1.7em;\n        font-weight: 600;\n    }\n    .menu-line {\n        display:flex;\n        justify-content: space-between;\n    }\n    .menu-img {\n        width: 50%;\n        border-radius: 20px;\n\n    }\n\n    .menu-title {\n        font-size:1.05em;\n\n        width: 50%;\n        align-self: center;\n    }\n    .main-content {\n        margin-left: $mainMarginLeft;\n        margin-right: $mainMarginLeft;\n        gap: 5em 1em;\n        display:grid;\n        grid-template-areas: "tl tr" \n        "ml mr"\n        "bot bot";\n        font-size: 1.5em;\n    }\n    .main-content.menu{\n        max-width: 1200px;\n        margin-left: $mainMarginLeft;\n        margin-right: $mainMarginLeft;\n        display: flex;\n        padding: 1em;\n        border:1px solid grey;\n        border-radius: 15px;\n        flex-direction: column;\n        font-size: 1.5em;\n        background-color: $colorMenuBg;\n    }\n    .top-left-col {\n\n        grid-area: tl;\n    }\n    .mid-left-col {\n\n        grid-area: ml;\n    }\n    .top-right-col {\n\n        grid-area: tr;\n    }\n    .mid-right-col {\n\n        grid-area: mr;\n    }\n    .bot-col {\n        font-size: 1.2em;\n        grid-area: bot;\n        text-align: center;\n    }\n    .fade-in {\n        animation: fade-in 0.4s ease-in-out;\n    }\n    .fade-out {\n        animation: fade-out 0.4s ease-in-out;\n    }\n    .image1 {\n        border-radius: 10% 5% 10% 20%;\n        max-width: 500px;\n        transform:rotateZ(-2deg);\n    }\n    .image2 {\n        border-radius: 10% 5% 10% 20%;\n        max-width: 550px;\n        transform: rotateZ(6deg);\n    }\n\n}\n\n\n\nfooter {\n    display:flex;\n    align-items: center;\n    justify-content: flex-start;\n    font-size: 1.2em;\n    width: 100%;\n    height: 70px;\n    background-color: $colorFooter;\n    p {\n        padding-left: 1rem;\n    }\n    a {\n        font-weight:600;\n        margin-left: 0.5rem;\n        text-decoration: none;\n        transition-duration: 0.2s;\n        color: black;\n    }\n    a:hover {\n        color: $colorSection;\n    }\n}\n\n'],sourceRoot:""}]);const A=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,i){"string"==typeof n&&(n=[[null,n,""]]);var a={};if(i)for(var r=0;r<this.length;r++){var o=this[r][0];null!=o&&(a[o]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);i&&a[c[0]]||(t&&(c[2]?c[2]="".concat(t," and ").concat(c[2]):c[2]=t),e.push(c))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,i=new Array(e);t<e;t++)i[t]=n[t];return i}n.exports=function(n){var t,i,a=(i=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var i,a,r=[],o=!0,A=!1;try{for(t=t.call(n);!(o=(i=t.next()).done)&&(r.push(i.value),!e||r.length!==e);o=!0);}catch(n){A=!0,a=n}finally{try{o||null==t.return||t.return()}finally{if(A)throw a}}return r}}(t,i)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var i=Object.prototype.toString.call(n).slice(8,-1);return"Object"===i&&n.constructor&&(i=n.constructor.name),"Map"===i||"Set"===i?Array.from(n):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?e(n,t):void 0}}(t,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=a[1],o=a[3];if(!o)return r;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),d="/*# ".concat(c," */"),s=o.sources.map((function(n){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(n," */")}));return[r].concat(s).concat([d]).join("\n")}return[r].join("\n")}},361:(n,e,t)=>{n.exports=t.p+"17e6928656a1674a5fff.jpeg"},408:(n,e,t)=>{n.exports=t.p+"f22d4de72f7bb254ddb1.jpeg"},737:(n,e,t)=>{n.exports=t.p+"b0c8667b52df7a4cfff0.jpeg"},825:(n,e,t)=>{n.exports=t.p+"b6a0128ba5363e4e5cf4.png"},396:(n,e,t)=>{n.exports=t.p+"34f085da089a8840bc05.jpeg"},277:(n,e,t)=>{n.exports=t.p+"746ddc795a4c09f2c039.jpeg"},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var r={},o=[],A=0;A<n.length;A++){var c=n[A],d=i.base?c[0]+i.base:c[0],s=r[d]||0,l="".concat(d," ").concat(s);r[d]=s+1;var m=t(l),p={css:c[1],media:c[2],sourceMap:c[3]};-1!==m?(e[m].references++,e[m].updater(p)):e.push({identifier:l,updater:a(p,i),references:1}),o.push(l)}return o}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=i(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<r.length;o++){var A=t(r[o]);e[A].references--}for(var c=i(n,a),d=0;d<r.length;d++){var s=t(r[d]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}r=c}}},569:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i=t.css,a=t.media,r=t.sourceMap;a?n.setAttribute("media",a):n.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var a=e[i];if(void 0!==a)return a.exports;var r=e[i]={id:i,exports:{}};return n[i](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),i=t(795),a=t.n(i),r=t(569),o=t.n(r),A=t(565),c=t.n(A),d=t(216),s=t.n(d),l=t(589),m=t.n(l),p=t(192),C={};function u(n,e=[]){const t=document.createElement("p");return y(t,e),t.textContent=n,t}function f(n,e=[]){const t=document.createElement("h1");return y(t,e),t.textContent=n,t}function g(n,e,t,i=[]){const a=document.createElement("a");return y(a,i),a.textContent=n,a.id=t,a.addEventListener("click",e),a}function h(n,e="image",t=[]){const i=document.createElement("img");return y(i,t),i.src=n,i.alt=e,i}function b(n){const e=document.querySelectorAll(".link");for(let t of e)t.id===n?t.classList.add("activated"):t.classList.remove("activated")}function x(n){return document.querySelector(`#${n}`).classList.contains("activated")}function y(n,e){if(e.length>0)for(let t of e)n.classList.add(t)}C.styleTagTransform=m(),C.setAttributes=c(),C.insert=o().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=s(),e()(p.Z,C),p.Z&&p.Z.locals&&p.Z.locals;var v=t(361),B=t(825);const w=function(){if(x("Home"))return;const n=document.querySelector(".main-content");n.classList.remove("fade-in"),n.classList.add("fade-out"),b("Home"),setTimeout((()=>{n.innerHTML="",n.classList.remove("fade-out","contact","menu");const e=function(){const n=document.createElement("div");n.classList.add("top-left-col");const e=f("Enjoy the relaxing experience of brunch",["para-title"]),t=u("We offer the most delicious brunch ideas in a beautiful environment. Perfect for your coffee break or mid-day lunch!",["para-main"]);return n.appendChild(e),n.appendChild(t),n}(),t=h(v,"brunch image",["top-right-col","image1"]),i=function(){const n=document.createElement("div");n.classList.add("mid-left-col");const e=h(B,"eggs image",["image2"]);return n.appendChild(e),n}(),a=function(){const n=document.createElement("div");n.classList.add("mid-right-col");const e=u("Our ingredients come from our trusted producers fresh every day, so that we can deliver you the experience you deserve.",["para-main"]),t=f("Quality ingredients, Delicious recipes!",["para-title"]);return n.appendChild(t),n.appendChild(e),n}(),r=function(){const n=document.createElement("div");n.classList.add("bot-col");const e=f("Take a well-deserved break...",["para-title"]);n.appendChild(e);const t=u("Call us to make your reservation!",["para-main"]);return n.appendChild(t),n}();n.appendChild(e),n.appendChild(t),n.appendChild(i),n.appendChild(a),n.appendChild(r),n.classList.add("fade-in")}),350)};var k=t(396),E=t(737),I=t(408),L=t(277);function M(n,e){const t=document.createElement("div");t.classList.add("menu-line");const i=u(n,["para-main","menu-title"]),a=h(e,"menu-image",["menu-img"]);return t.appendChild(i),t.appendChild(a),t}const S=function(){if(x("Menu"))return;const n=document.querySelector(".main-content");n.classList.remove("fade-in"),n.classList.add("fade-out"),b("Menu"),setTimeout((()=>{n.innerHTML="",n.classList.remove("fade-out","contact");const e=function(n){const e=document.createElement("div");e.classList.add("menu-line");const t=f("A sample of our menu, prepared from our top chefs just for you...",["para-title"]);return e.appendChild(t),e}(),t=M("Pancakes with Raspberries",k),i=M("Eggs and Avocado breakfast",E),a=M("Croque Madame",I),r=M("Waffle",L);n.appendChild(e),n.appendChild(t),n.appendChild(i),n.appendChild(a),n.appendChild(r),n.classList.add("fade-in","menu")}),350)},J=function(){if(x("Contact"))return;const n=document.querySelector(".main-content");n.classList.remove("fade-in"),n.classList.add("fade-out"),b("Contact"),setTimeout((()=>{n.innerHTML="",n.classList.remove("fade-out","menu");const e=function(){const n=document.createElement("div");n.classList.add("top-left-col");const e=f("Book your table now!",["para-title"]),t=u("Contact us at: 555-53535",["para-main"]),i=u("(just kidding, it's just a web dev excercise)",["para-main"]);return n.appendChild(e),n.appendChild(t),n.appendChild(i),n}();n.appendChild(e),n.classList.add("fade-in")}),350)},$=document.querySelector("#content");!function(){const n=document.createElement("header"),e=f("Brunchery",["brand"]);n.appendChild(e);const t=document.createElement("div");t.classList.add("links");const i=g("Home",(()=>w()),"Home",["link"]),a=g("Menu",(()=>S()),"Menu",["link"]),r=g("Contact",(()=>J()),"Contact",["link"]),o=document.createElement("div");o.classList.add("btn-hamburger");const A=document.createElement("div");A.classList.add("bar1");const c=document.createElement("div");c.classList.add("bar2");const d=document.createElement("div");d.classList.add("bar3"),o.appendChild(A),o.appendChild(c),o.appendChild(d),o.addEventListener("click",(()=>{o.classList.toggle("change"),document.querySelector(".hidden-menu").classList.toggle("activated")})),n.appendChild(o),t.appendChild(i),t.appendChild(a),t.appendChild(r),n.appendChild(t),$.appendChild(n)}(),function(){const n=document.createElement("section"),e=document.createElement("div"),t=g("Home",(()=>w()),"Home",["link"]),i=g("Menu",(()=>S()),"Menu",["link"]),a=g("Contact",(()=>J()),"Contact",["link"]),r=document.createElement("div");r.classList.add("hidden-menu"),r.appendChild(t),r.appendChild(i),r.appendChild(a),n.appendChild(r),e.classList.add("main-content"),n.appendChild(e),$.appendChild(n)}(),function(){const n=document.createElement("footer"),e=u("Website created by "),t=function(n,e,t=[]){const i=document.createElement("a");return y(i,t),i.textContent=n,i.href=e,i}("Kostas-s","https://github.com/kostas-s");n.appendChild(e),n.appendChild(t),$.appendChild(n)}(),w()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,