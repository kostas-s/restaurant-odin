(()=>{"use strict";var e={192:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(15),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,'@keyframes fade-in{from{opacity:0;margin-left:7%}to{opacity:1;margin-left:8%}}@keyframes fade-out{0%{opacity:1;margin-left:8%}100%{opacity:0;margin-left:9%}}body,p,a,h1{padding:0;margin:0;font-family:"Raleway",sans-serif}header{display:flex;align-items:center;justify-content:space-between;width:100%;height:120px;background-color:#57837b}header .brand{font-family:"Zen Loop",cursive;font-size:80px;margin-left:1rem}header .links{margin-right:1rem}header .links .link{box-sizing:border-box;transition-duration:.2s;margin-left:2rem;font-size:30px;font-weight:200;cursor:pointer}header .links .link:hover:not(.activated){color:#f1ecc3;margin-left:5rem}header .links .activated{font-weight:500}section{width:100vw;min-height:500px;padding:5em 0;background-color:#f1ecc3}section .para-title{margin-bottom:.5em;font-size:1.7em;font-weight:600}section .main-content{margin-left:8%;margin-right:8%;gap:5em 1em;display:grid;grid-template-areas:"tl tr" "ml mr" "bot bot";font-size:1.5em}section .top-left-col{grid-area:tl}section .mid-left-col{grid-area:ml}section .top-right-col{grid-area:tr}section .mid-right-col{grid-area:mr}section .bot-col{font-size:1.2em;grid-area:bot;text-align:center}section .fade-in{animation:fade-in .4s ease-in-out}section .fade-out{animation:fade-out .4s ease-in-out}section .image1{border-radius:10% 5% 10% 20%;max-width:500px !important;transform:rotateZ(-2deg)}section .image2{border-radius:10% 5% 10% 20%;max-width:550px !important;transform:rotateZ(6deg)}footer{display:flex;align-items:center;justify-content:flex-start;font-size:1.2em;width:100%;height:70px;background-color:#515e63}footer p{padding-left:1rem}footer a{font-weight:600;margin-left:.5rem;text-decoration:none;transition-duration:.2s;color:#000}footer a:hover{color:#f1ecc3}',"",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAUA,mBACI,KAAA,SAAA,CACA,cAJe,CAKf,GAAA,SAAA,CAAA,cAPa,CAAA,CAWjB,oBACI,GAAA,SAAA,CAAA,cAZa,CAab,KAAA,SAAA,CAAA,cAZgB,CAAA,CAepB,YACI,SAAA,CACA,QAAA,CACA,gCArBO,CAwBX,OACI,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,UAAA,CACA,YAAA,CACA,wBAlCU,CAmCV,cACI,8BA/BI,CAgCJ,cAAA,CACA,gBAAA,CAGJ,cACI,iBAAA,CACJ,oBACI,qBAAA,CACA,uBAAA,CACA,gBAAA,CACA,cAAA,CACA,eAAA,CACA,cAAA,CAEA,0CACI,aAnDG,CAoDH,gBAAA,CAEJ,yBACI,eAAA,CAKZ,QAEI,WAAA,CACA,gBAAA,CACA,aAAA,CACA,wBAjEW,CAmEX,oBACI,kBAAA,CACA,eAAA,CACA,eAAA,CAEJ,sBACI,cApES,CAqET,eArES,CAsET,WAAA,CACA,YAAA,CACA,6CAAA,CAGA,eAAA,CAEJ,sBAEI,YAAA,CAEJ,sBAEI,YAAA,CAEJ,uBAEI,YAAA,CAEJ,uBAEI,YAAA,CAEJ,iBACI,eAAA,CACA,aAAA,CACA,iBAAA,CAEJ,iBACI,iCAAA,CAEJ,kBACI,kCAAA,CAEJ,gBACI,4BAAA,CACA,0BAAA,CACA,wBAAA,CAEJ,gBACI,4BAAA,CACA,0BAAA,CACA,uBAAA,CAKR,OACI,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,eAAA,CACA,UAAA,CACA,WAAA,CACA,wBAhIU,CAiIV,SACI,iBAAA,CAEJ,SACI,eAAA,CACA,iBAAA,CACA,oBAAA,CACA,uBAAA,CACA,UAAA,CAEJ,eACI,aA7IO",sourcesContent:['$colorHeader: #57837B;\n$colorSection: #F1ECC3;\n$colorFooter: #515E63;\n$colorImgBg1: #A35709;\n$fontMain: \'Raleway\', sans-serif;\n$fontBrand: \'Zen Loop\', cursive;\n$mainMarginLeft: 8%;\n$mainMarginLeftOut: 9%;\n$mainMarginLeftIn: 7%;\n\n@keyframes fade-in {\n    from {opacity: 0;\n    margin-left:$mainMarginLeftIn;}\n    to {opacity: 1; margin-left: $mainMarginLeft;\n    }\n}\n\n@keyframes fade-out {\n    0% {opacity: 1; margin-left: $mainMarginLeft}\n    100% {opacity: 0; margin-left: $mainMarginLeftOut}\n}\n\nbody, p, a, h1 {\n    padding: 0;\n    margin: 0;\n    font-family: $fontMain;\n}\n\nheader {\n    display:flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: 120px;\n    background-color: $colorHeader;\n    .brand {\n        font-family: $fontBrand;\n        font-size: 80px;\n        margin-left: 1rem;\n    }\n\n    .links {\n        margin-right: 1rem;\n    .link {\n        box-sizing: border-box;\n        transition-duration: 0.2s;\n        margin-left: 2rem;\n        font-size: 30px;\n        font-weight:200;\n        cursor:pointer;\n        }\n        .link:hover:not(.activated) {\n            color:$colorSection;\n            margin-left: 5rem;\n        }\n        .activated {\n            font-weight: 500;\n        }\n    }\n}\n\nsection {\n\n    width: 100vw;\n    min-height: 500px;\n    padding: 5em 0 ;\n    background-color: $colorSection;\n\n    .para-title {\n        margin-bottom:0.5em;\n        font-size: 1.7em;\n        font-weight: 600;\n    }\n    .main-content {\n        margin-left: $mainMarginLeft;\n        margin-right: $mainMarginLeft;\n        gap: 5em 1em;\n        display:grid;\n        grid-template-areas: "tl tr" \n        "ml mr"\n        "bot bot";\n        font-size: 1.5em;\n    }\n    .top-left-col {\n\n        grid-area: tl;\n    }\n    .mid-left-col {\n\n        grid-area: ml;\n    }\n    .top-right-col {\n\n        grid-area: tr;\n    }\n    .mid-right-col {\n\n        grid-area: mr;\n    }\n    .bot-col {\n        font-size: 1.2em;\n        grid-area: bot;\n        text-align: center;\n    }\n    .fade-in {\n        animation: fade-in 0.4s ease-in-out;\n    }\n    .fade-out {\n        animation: fade-out 0.4s ease-in-out;\n    }\n    .image1 {\n        border-radius: 10% 5% 10% 20%;\n        max-width: 500px !important;\n        transform:rotateZ(-2deg);\n    }\n    .image2 {\n        border-radius: 10% 5% 10% 20%;\n        max-width: 550px !important;\n        transform: rotateZ(6deg);\n    }\n\n}\n\nfooter {\n    display:flex;\n    align-items: center;\n    justify-content: flex-start;\n    font-size: 1.2em;\n    width: 100%;\n    height: 70px;\n    background-color: $colorFooter;\n    p {\n        padding-left: 1rem;\n    }\n    a {\n        font-weight:600;\n        margin-left: 0.5rem;\n        text-decoration: none;\n        transition-duration: 0.2s;\n        color: black;\n    }\n    a:hover {\n        color: $colorSection;\n    }\n}\n\n'],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var c=0;c<e.length;c++){var A=[].concat(e[c]);r&&o[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),n.push(A))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,o=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,o,a=[],i=!0,c=!1;try{for(t=t.call(e);!(i=(r=t.next()).done)&&(a.push(r.value),!n||a.length!==n);i=!0);}catch(e){c=!0,o=e}finally{try{i||null==t.return||t.return()}finally{if(c)throw o}}return a}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],i=o[3];if(!i)return a;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),s="/*# ".concat(A," */"),d=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[a].concat(d).concat([s]).join("\n")}return[a].join("\n")}},361:(e,n,t)=>{e.exports=t.p+"17e6928656a1674a5fff.jpeg"},825:(e,n,t)=>{e.exports=t.p+"b6a0128ba5363e4e5cf4.png"},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var A=e[c],s=r.base?A[0]+r.base:A[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var u=t(l),f={css:A[1],media:A[2],sourceMap:A[3]};-1!==u?(n[u].references++,n[u].updater(f)):n.push({identifier:l,updater:o(f,r),references:1}),i.push(l)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var A=r(e,o),s=0;s<a.length;s++){var d=t(a[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=A}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r=t.css,o=t.media,a=t.sourceMap;o?e.setAttribute("media",o):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),A=t.n(c),s=t(216),d=t.n(s),l=t(589),u=t.n(l),f=t(192),m={};function p(e,n=[]){const t=document.createElement("p");return b(t,n),t.textContent=e,t}function C(e,n=[]){const t=document.createElement("h1");return b(t,n),t.textContent=e,t}function g(e,n,t,r=[]){const o=document.createElement("a");return b(o,r),o.textContent=e,o.id=t,o.addEventListener("click",n),o}function h(e,n="image",t=[]){const r=document.createElement("img");return b(r,t),r.src=e,r.alt=n,r}function v(e){const n=document.querySelectorAll(".link");for(let t of n)t.id===e?t.classList.add("activated"):t.classList.remove("activated")}function y(e){return document.querySelector(`#${e}`).classList.contains("activated")}function b(e,n){if(n.length>0)for(let t of n)e.classList.add(t)}m.styleTagTransform=u(),m.setAttributes=A(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),n()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;var x=t(361),B=t(825);const E=function(){if(y("Home"))return;const e=document.querySelector(".main-content");e.classList.add("fade-out"),v("Home"),setTimeout((()=>{e.innerHTML="",e.classList.remove("fade-out");const n=function(){const e=document.createElement("div");e.classList.add("top-left-col");const n=C("Enjoy the relaxing experience of brunch",["para-title"]),t=p("We offer the most delicious brunch ideas in a beautiful environment. Perfect for your coffee break or mid-day lunch!",["para-main"]);return e.appendChild(n),e.appendChild(t),e}(),t=h(x,"brunch image",["top-right-col","image1"]),r=function(){const e=document.createElement("div");e.classList.add("mid-left-col");const n=h(B,"eggs image",["image2"]);return e.appendChild(n),e}(),o=function(){const e=document.createElement("div");e.classList.add("mid-right-col");const n=p("Our ingredients come from our trusted producers fresh every day, so that we can deliver you the experience you deserve.",["para-main"]),t=C("Quality ingredients, Delicious recipes!",["para-title"]);return e.appendChild(t),e.appendChild(n),e}(),a=function(){const e=document.createElement("div");e.classList.add("bot-col");const n=C("Take a well-deserved break...",["para-title"]);e.appendChild(n);const t=p("Call us to make your reservation!",["para-main"]);return e.appendChild(t),e}();e.appendChild(n),e.appendChild(t),e.appendChild(r),e.appendChild(o),e.appendChild(a),e.classList.add("fade-in")}),350)},w=document.querySelector("#content");!function(){const e=document.createElement("header"),n=C("Brunchery",["brand"]);e.appendChild(n);const t=document.createElement("div");t.classList.add("links");const r=g("Home",(()=>E()),"Home",["link"]),o=g("Menu",(()=>function(){if(y("Menu"))return;const e=document.querySelector(".main-content");e.classList.add("fade-out"),v("Menu"),setTimeout((()=>{e.innerHTML="",e.classList.remove("fade-out");const n=function(){const e=document.createElement("div");e.classList.add("top-left-col");const n=C("Under Construction...",["para-title"]),t=p("Check back soon!",["para-main"]);return e.appendChild(n),e.appendChild(t),e}();e.appendChild(n),e.classList.add("fade-in")}),350)}()),"Menu",["link"]),a=g("Contact",(()=>function(){if(y("Contact"))return;const e=document.querySelector(".main-content");e.classList.add("fade-out"),v("Contact"),setTimeout((()=>{e.innerHTML="",e.classList.remove("fade-out");const n=function(){const e=document.createElement("div");e.classList.add("top-left-col");const n=C("Under Construction...",["para-title"]),t=p("Check back soon!",["para-main"]);return e.appendChild(n),e.appendChild(t),e}();e.appendChild(n),e.classList.add("fade-in")}),350)}()),"Contact",["link"]);t.appendChild(r),t.appendChild(o),t.appendChild(a),e.appendChild(t),w.appendChild(e)}(),function(){const e=document.createElement("section"),n=document.createElement("div");n.classList.add("main-content"),e.appendChild(n),w.appendChild(e)}(),function(){const e=document.createElement("footer"),n=p("Website created by "),t=function(e,n,t=[]){const r=document.createElement("a");return b(r,t),r.textContent=e,r.href=n,r}("Kostas-s","https://github.com/kostas-s");e.appendChild(n),e.appendChild(t),w.appendChild(e)}(),E()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,